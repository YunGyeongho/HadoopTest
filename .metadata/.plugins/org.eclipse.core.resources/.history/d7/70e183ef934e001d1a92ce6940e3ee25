# -*- coding:utf-8 -*-
from flask.app import Flask
import ssl
import AAFAdFilter
import AAFNaiveBayes

app = Flask(__name__)
ssl.match_hostname = lambda cert, hostname: True
ssl._create_default_https_context = ssl._create_unverified_context


@app.route("/filter.judge.ai")
def getJudgeUseFilter():

    try:
        mainContainer = getMainContainer(getMainFrameSrc(url))
        # API에서 응답 받은 url에서 mainFrameSrc를 가져오고 해당 src로 재요청을 하여 mainContainer 객체를 가져온다.
    except Exception as e:
        exceptList.write("%d%s,%s,mainContainer에서 터짐\n" % (no, url, e))
        continue
        # except는 요청 과정에서 비공개글로 전환 했거나 mainContainer가 아닌 postViewArea가 있는 경우 등 너무 많은 변수가 있어 넘기기로 했다.
        # 실제 서버 구축 시 except에 continue가 아닌 들어온 요청에 "불가"와 같은 응답으로 대체해야 한다. 
    
    srcList = getImgSrcList(mainContainer, srcList)
    # 가져온 mainContainer에서 img 판독을 위한 srcList를 셋팅 해주는 함수를 부른다.
    
    if isInCompanyList(srcList):
        filterResult.write("%d,%s,CompanyList에서 걸림\n" % (no, url))
        # 실제 서버에선 광고 응답
    else :
        if isContainsImgKeyword(srcList):
            filterResult.write("%d,%s,imgKeyword에서 걸림\n" % (no, url))
            # 실제 서버에선 광고 응답
        else:
            if isContainsKeywordList(mainContainer):
                filterResult.write("%d,%s,textKeyword에서 걸림\n" % (no, url))
                # 실제 서버에선 광고 응답
            else:
                filterResult.write("%d,%s,광고 아님\n" % (no, url))
    
    return

@app.route("/judge.ai")
def getJudgeOnlyAi():
    
    
    return

if __name__=="__main__":
    app.run("0.0.0.0", 6833, debug=True)